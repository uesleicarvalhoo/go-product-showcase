definitions:
  domain.Client:
    properties:
      address:
        $ref: '#/definitions/entity.ClientAddress'
      email:
        type: string
      id:
        type: string
      name:
        minLength: 4
        type: string
      phone:
        type: string
    required:
    - address
    - email
    - name
    - phone
    type: object
  domain.Pagination-domain_Client:
    properties:
      items:
        items:
          $ref: '#/definitions/entity.Client'
        type: array
      page:
        type: integer
    type: object
  domain.Product:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        minLength: 4
        type: string
      price:
        type: number
    required:
    - category
    - code
    - description
    - name
    - price
    type: object
  dto.AddressPayload:
    properties:
      city:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
  dto.CreateClientPayload:
    properties:
      address:
        $ref: '#/definitions/dto.AddressPayload'
      email:
        type: string
      name:
        minLength: 4
        type: string
      phone:
        type: string
    required:
    - address
    - email
    - name
    - phone
    type: object
  dto.CreateProductPayload:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dto.UpdateClientPayload:
    properties:
      address:
        $ref: '#/definitions/dto.AddressPayload'
      email:
        type: string
      name:
        minLength: 4
        type: string
      phone:
        type: string
    type: object
  dto.UpdateProductPayload:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  entity.Client:
    properties:
      address:
        $ref: '#/definitions/entity.ClientAddress'
      email:
        type: string
      id:
        type: string
      name:
        minLength: 4
        type: string
      phone:
        type: string
    required:
    - address
    - email
    - name
    - phone
    type: object
  entity.ClientAddress:
    properties:
      city:
        type: string
      street:
        type: string
      zip_code:
        type: string
    required:
    - city
    - street
    - zip_code
    type: object
  models.MessageJSON:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /clients/:
    get:
      description: List all clients clients
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Pagination-domain_Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: List Clients
      tags:
      - Client
    post:
      description: Create a new client and return client details
      parameters:
      - description: data to create a new client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateClientPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Create client
      tags:
      - Client
  /clients/{id}:
    get:
      description: Get clients details
      parameters:
      - description: the uuid of client
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Get Client
      tags:
      - Client
    post:
      description: Update client data
      parameters:
      - description: payload to update client data
        in: path
        name: id
        required: true
        type: string
      - description: fields to update, empty fields will be ignored
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateClientPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Update client
      tags:
      - Client
  /products/:
    get:
      description: List all products products
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: List Products
      tags:
      - Product
    post:
      description: Create a new product and return product details
      parameters:
      - description: data to create a new product
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Create product
      tags:
      - Product
  /products/{id}:
    get:
      description: Get products details
      parameters:
      - description: the uuid of product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Get Product
      tags:
      - Product
    post:
      description: Update product data
      parameters:
      - description: payload to update product data
        in: path
        name: id
        required: true
        type: string
      - description: fields to update, empty fields will be ignored
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.MessageJSON'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.MessageJSON'
      summary: Update product
      tags:
      - Product
swagger: "2.0"
